apiVersion: apps/v1
kind: Deployment
metadata:
  name: query-service-deployment
  namespace: nyro-develop # Asegurar namespace correcto
  labels:
    app: query-service
spec:
  replicas: 1 # Empezar con 1, escalar según necesidad
  selector:
    matchLabels:
      app: query-service
  template:
    metadata:
      labels:
        app: query-service
    spec:
      containers:
        - name: query-service
          # LLM_REFACTOR_FINAL: Reemplazar con el tag de tu imagen final
          image: ghcr.io/your-org/query-service:v0.3.0 # ACTUALIZAR IMAGEN
          imagePullPolicy: Always # O IfNotPresent
          ports:
            - name: http
              containerPort: 8001 # Puerto interno definido en Dockerfile/Config
              protocol: TCP
          # Comando Gunicorn ajustado
          command: ["gunicorn", "-k", "uvicorn.workers.UvicornWorker"]
          args: [
              "-w", "2", # Número de workers (ajustar según CPU/Memoria)
              "-b", "0.0.0.0:8001", # Vincular al puerto interno
              "-t", "120", # Worker timeout
              # "--log-level", "$(QUERY_LOG_LEVEL)", # Heredar nivel de log (opcional)
              "app.main:app"
            ]
          envFrom:
            - configMapRef:
                name: query-service-config
            - secretRef:
                name: query-service-secrets # Asegurar que el Secret existe
          resources: # Ajustar según pruebas de carga
            requests:
              cpu: "750m" # Aumentado ligeramente por modelos ML
              memory: "1.5Gi"
            limits:
              cpu: "2000m" # 2 vCPU
              memory: "3Gi" # Más memoria para BM25/Reranker

          # --- Sondas eliminadas según solicitud ---
          # livenessProbe: ...
          # readinessProbe: ...

      # Descomentar si se usa registro privado
      # imagePullSecrets:
      # - name: your-registry-secret